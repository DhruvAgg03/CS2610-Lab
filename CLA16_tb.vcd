$date
	Mon Feb 06 16:11:15 2023
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module CLA16_tb $end
$var wire 16 ! res [15:0] $end
$var wire 1 " ovflow $end
$var reg 16 # A [15:0] $end
$var reg 16 $ B [15:0] $end
$var reg 1 % sign $end
$var reg 1 & subtract $end
$scope module __C $end
$var wire 1 " OF $end
$var wire 1 ' mint1 $end
$var wire 1 ( mint2 $end
$var wire 1 ) o1 $end
$var wire 1 * o2 $end
$var wire 16 + operand1 [15:0] $end
$var wire 16 , operand2 [15:0] $end
$var wire 16 - operand2_bar [15:0] $end
$var wire 16 . operand3 [15:0] $end
$var wire 1 % sign $end
$var wire 1 / sign_bar $end
$var wire 1 & sub $end
$var wire 16 0 result [15:0] $end
$var wire 4 1 carries [3:0] $end
$var wire 4 2 c2l [3:0] $end
$scope module c1 $end
$var wire 4 3 A [3:0] $end
$var wire 4 4 B [3:0] $end
$var wire 1 5 C2L $end
$var wire 1 & Cin $end
$var wire 1 6 carry $end
$var wire 4 7 g [3:0] $end
$var wire 4 8 p [3:0] $end
$var wire 1 9 p0c0 $end
$var wire 1 : p1g0 $end
$var wire 1 ; p1p0c0 $end
$var wire 1 < p2g1 $end
$var wire 1 = p2p1g0 $end
$var wire 1 > p2p1p0c0 $end
$var wire 1 ? p3g2 $end
$var wire 1 @ p3p2g1 $end
$var wire 1 A p3p2p1g0 $end
$var wire 1 B p3p2p1p0c0 $end
$var wire 4 C sum [3:0] $end
$var wire 4 D c [3:0] $end
$upscope $end
$scope module c2 $end
$var wire 4 E A [3:0] $end
$var wire 4 F B [3:0] $end
$var wire 1 G C2L $end
$var wire 1 H Cin $end
$var wire 1 I carry $end
$var wire 4 J g [3:0] $end
$var wire 4 K p [3:0] $end
$var wire 1 L p0c0 $end
$var wire 1 M p1g0 $end
$var wire 1 N p1p0c0 $end
$var wire 1 O p2g1 $end
$var wire 1 P p2p1g0 $end
$var wire 1 Q p2p1p0c0 $end
$var wire 1 R p3g2 $end
$var wire 1 S p3p2g1 $end
$var wire 1 T p3p2p1g0 $end
$var wire 1 U p3p2p1p0c0 $end
$var wire 4 V sum [3:0] $end
$var wire 4 W c [3:0] $end
$upscope $end
$scope module c3 $end
$var wire 4 X A [3:0] $end
$var wire 4 Y B [3:0] $end
$var wire 1 Z C2L $end
$var wire 1 [ Cin $end
$var wire 1 \ carry $end
$var wire 4 ] g [3:0] $end
$var wire 4 ^ p [3:0] $end
$var wire 1 _ p0c0 $end
$var wire 1 ` p1g0 $end
$var wire 1 a p1p0c0 $end
$var wire 1 b p2g1 $end
$var wire 1 c p2p1g0 $end
$var wire 1 d p2p1p0c0 $end
$var wire 1 e p3g2 $end
$var wire 1 f p3p2g1 $end
$var wire 1 g p3p2p1g0 $end
$var wire 1 h p3p2p1p0c0 $end
$var wire 4 i sum [3:0] $end
$var wire 4 j c [3:0] $end
$upscope $end
$scope module c4 $end
$var wire 4 k A [3:0] $end
$var wire 4 l B [3:0] $end
$var wire 1 m C2L $end
$var wire 1 n Cin $end
$var wire 1 o carry $end
$var wire 4 p g [3:0] $end
$var wire 4 q p [3:0] $end
$var wire 1 r p0c0 $end
$var wire 1 s p1g0 $end
$var wire 1 t p1p0c0 $end
$var wire 1 u p2g1 $end
$var wire 1 v p2p1g0 $end
$var wire 1 w p2p1p0c0 $end
$var wire 1 x p3g2 $end
$var wire 1 y p3p2g1 $end
$var wire 1 z p3p2p1g0 $end
$var wire 1 { p3p2p1p0c0 $end
$var wire 4 | sum [3:0] $end
$var wire 4 } c [3:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b0 }
b0 |
0{
0z
0y
0x
0w
0v
0u
0t
0s
0r
b0 q
b0 p
0o
0n
0m
b0 l
b0 k
b110 j
b100 i
0h
0g
0f
0e
0d
0c
0b
0a
1`
0_
b10 ^
b1 ]
0\
0[
0Z
b11 Y
b1 X
b0 W
b110 V
0U
0T
0S
0R
0Q
0P
0O
0N
0M
0L
b110 K
b0 J
0I
0H
0G
b100 F
b10 E
b1110 D
b1000 C
0B
0A
0@
0?
0>
1=
0<
0;
1:
09
b110 8
b1 7
06
15
b101 4
b11 3
b1 2
b0 1
b10001101000 0
1/
b1101000101 .
b1111110010111010 -
b1101000101 ,
b100100011 +
0*
0)
0(
0'
0&
0%
b1101000101 $
b100100011 #
0"
b10001101000 !
$end
#200
1"
1'
1)
0*
b1001 2
1m
b1000 1
1o
b1110 }
1s
1v
1z
b1 p
b10001101000 !
b10001101000 0
b0 |
b1 l
b1110 q
b1001101000101 .
b1110110010111010 -
b1111 k
b1001101000101 $
b1001101000101 ,
b1111000100100011 #
b1111000100100011 +
#400
b1000 2
05
19
0:
0=
b100 W
b0 j
0`
b1100 }
0s
0v
0z
b1101 V
b1101 i
b1101 |
b10 7
b1001 8
b10 J
b1001 K
b0 ]
b1101 ^
b1110 p
b1 q
b1010 4
b1011 F
b1100 Y
b1110 l
b1101110111011110 !
b1101110111011110 0
b1110 C
b1110110010111010 .
b111 D
1&
#600
0"
15
0'
0)
0*
b1 2
0m
1:
1=
b0 W
b110 j
1`
b0 1
0o
b110 V
b100 i
b0 }
09
b1 7
b110 8
b0 J
b110 K
b1 ]
b10 ^
b0 |
b10001101000 !
b10001101000 0
b1000 C
b101 4
b100 F
b11 Y
b0 l
b0 p
b0 q
b1110 D
b1101000101 .
b1111110010111010 -
b0 k
0&
b1101000101 $
b1101000101 ,
b100100011 #
b100100011 +
#800
1*
b1001 2
1m
b1110 }
b111 p
b1110010001101000 !
b1110010001101000 0
b1110 |
b111 l
b0 q
b111001101000101 .
b1000110010111010 -
b111 k
b111001101000101 $
b111001101000101 ,
b111000100100011 #
b111000100100011 +
#1000
1"
1'
1)
0*
b1000 1
1o
0x
b1111 p
b1110010001101000 !
b1110010001101000 0
b1110 |
b1111 l
b0 q
b1111001101000101 .
b110010111010 -
b1111 k
b1111001101000101 $
b1111001101000101 ,
b1111000100100011 #
b1111000100100011 +
#1200
1*
b1 2
0m
b100 }
0u
b100010001101000 !
b100010001101000 0
b100 |
b1010 l
b1010 p
b0 q
b1010001101000101 .
b101110010111010 -
b1010 k
b1010001101000101 $
b1010001101000101 ,
b1010000100100011 #
b1010000100100011 +
#1400
0"
0*
b1001 2
1m
1s
1v
1z
b1110 }
0u
b1 p
b10001101000 !
b10001101000 0
b0 |
0'
b1 l
b1110 q
0/
0(
b1001101000101 .
b1110110010111010 -
b1111 k
1%
b1001101000101 $
b1001101000101 ,
b1111000100100011 #
b1111000100100011 +
#1600
0"
0(
05
0)
0*
b0 2
0m
b0 1
0o
19
0:
0=
b100 W
b0 j
0`
b1101 V
b1101 i
b0 }
0s
0v
0z
b10 7
b1001 8
b10 J
b1001 K
b0 ]
b1101 ^
b10 |
b10110111011110 !
b10110111011110 0
b1110 C
b1010 4
b1011 F
b1100 Y
b0 l
b0 p
b10 q
b111 D
b110010111010 .
b110010111010 -
b10 k
1&
b1111001101000101 $
b1111001101000101 ,
b10000100100011 #
b10000100100011 +
#1800
1"
1(
1*
b1000 2
1m
1s
b1110 }
b101 p
b1100110111011110 !
b1100110111011110 0
b1100 |
b101 l
b10 q
b101110010111010 .
b101110010111010 -
b111 k
b1010001101000101 $
b1010001101000101 ,
b111000100100011 #
b111000100100011 +
#2000
